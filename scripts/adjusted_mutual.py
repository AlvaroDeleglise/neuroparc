import nibabel as nb
import numpy as np
import glob
from matplotlib import pyplot as plt
from sklearn import metrics as skm
from argparse import ArgumentParser


def adjusted_mutual_info(atlas1, atlas2):
    """Calculate adjusted mutual information between two atlases

    Parameters
    ----------
    atlases : [type]
        [description]
    """
    
    at1 = nb.load(atlas1)
    at2 = nb.load(atlas2)

    atlas1 = at1.get_data()
    atlas2 = at2.get_data()

    AMI = skm.adjusted_mutual_info_score(atlas1.flatten(),atlas2.flatten())

    return AMI



def main():
    parser = ArgumentParser(
        description="Script to calculate the adjsted mutual information of atlases"
    )
    parser.add_argument(
        "input_dir",
        help="""The directory where the atlases you wish to analyze are saved.""",
        action="store",
    )
    parser.add_argument(
        "--output_dir",
        help="""Directory to save the output adjacency matrix. If not specified, then
        the input directory will be used. Default is None.""",
        action="store",
        default=None,
    )
    parser.add_argument(
        "--voxel_size",
        help="""Voxel_size for atlases to be analyzed, this will filter
        the files located in the input_dir file for anything with 
        <atlas_name>_res-<VOX>x<VOX>x<VOX>.nii.gz""",
        action="store",
        default="1",
    )
    parser.add_argument(
        "--atlas_names",
        help="""List of atlas names to analyze, located in the directory
        specified by input_dir. If not specified, then all atlases in the input
        directory will be analyzed. These override the value specified in
        '--voxel_size'. Default is None.""",
        nargs="+",
    )

    # ------- Parse CLI arguments ------- #
    result = parser.parse_args()
    input_dir = result.input_dir
    voxel_size = result.voxel_size
    atlases = result.atlas_names
    output_dir=result.output_dir

    #Search for all applicable files
    if atlases:
        #Append input directory to atlas_names
        atlas_paths = [f"{input_dir}/{i}" for i in atlases]
    else:
        dims = f"{voxel_size}x{voxel_size}x{voxel_size}"
        
        atlas_paths = [
        i for i in glob.glob(input_dir + f"/*{dims}.nii.gz") if dims in i
        ]

    
    AMI_array = np.array([[1,0.5799221279,0.5141924695,0.3301393946,0.5634467808,0.5960696207,0.4554452003,0.4117299778,0.3951178475,0.3824807795,0.60579588,0.51380114,0.42736125,0.42736125,0.41576287,0.02702981,0.33016556,0.58635889,0.0526,0.24196185,0.27221272,0.5297843,0.30993828,0.56392254,0.56500913,0.56251952,0.55151945,0.2039703,0.39040251,0.23371053,0.42695416,0.57248911,0.57870168,0.58737514,0.596023,0.5966412,0.61043517,0.60103168,0.60290093,0.60410588,0.60540708,0.6009499,0.59320841,0.58412786,0.56955049,0.54439147],
    [0.5799221279,1,0.4983804764,0.416267841,0.5650223982,0.5423815231,0.4063417112,0.4633432721,0.447351488,0.4315161807,0.56125881,0.55827634,0.4185337,0.4185337,0.35340368,0.02376215,0.35499844,0.55217115,0.0682756442,0.26293102,0.27759201,0.48666612,0.26455836,0.65647515,0.65904448,0.6578434,0.64949691,0.2587574,0.46418343,0.30317818,0.52121081,0.51625921,0.52483035,0.5317643,0.5463195,0.54965299,0.56316696,0.55755603,0.56400017,0.55901097,0.56718288,0.56765028,0.56006637,0.55502153,0.54437116,0.52329833],
    [0.5141924695,0.4983804764,1,0.3000421327,0.4533741066,0.5116566427,0.2948217036,0.4105413757,0.3073754329,0.3798691459,0.49998089,0.49145645,0.33262339,0.33262339,0.32121251,0.05314581,0.30908122,0.44545498,0.050925508,0.23613228,0.25167551,0.4320463,0.31182428,0.47436775,0.47660416,0.47535197,0.46944441,0.2079206,0.38414317,0.23749214,0.41635873,0.5013655,0.51578964,0.51068129,0.50547108,0.50619231,0.51170914,0.51484925,0.50992878,0.5119692,0.5067954,0.50265692,0.4982234,0.48900455,0.47656707,0.45562843],
    [0.3301393946,0.416267841,0.3000421327,1,0.3346836104,0.3008405498,0.2833452468,0.4328196453,0.3248028001,0.3176011978,0.3188409,0.38706748,0.22580691,0.22580691,0.20713022,0.00494626,0.26402145,0.33645817,0.0665632933,0.18532491,0.17289611,0.24979868,0.15467014,0.46431216,0.46292593,0.46021896,0.44288894,0.22757903,0.34814559,0.26000489,0.37603979,0.28059474,0.27919584,0.28104882,0.28902312,0.28744521,0.29143391,0.28810042,0.28877377,0.28537599,0.28753044,0.28366748,0.27863861,0.27314253,0.2650266,0.25476288],
    [0.5634467808,0.5650223982,0.4533741066,0.3346836104,1,0.5464569676,0.3821844622,0.3877421347,0.3419898869,0.360547496,0.5031806,0.47363493,0.35812954,0.35812954,0.33901571,0.04308773,0.31817082,0.50078874,0.0576146837,0.24217268,0.28431336,0.48712907,0.25308305,0.53726839,0.54285534,0.54335858,0.53720521,0.17759591,0.35904132,0.20950627,0.40254807,0.54134766,0.55084409,0.56260434,0.56021229,0.57501769,0.58551357,0.58246698,0.58504817,0.59010354,0.58634039,0.58245394,0.57743473,0.56872574,0.55364223,0.52898764],
    [0.5960696207,0.5423815231,0.5116566427,0.3008405498,0.5464569676,1,0.4064530496,0.3811421646,0.3819255837,0.3390335835,0.65871758,0.46944694,0.50187478,0.50187478,0.53046017,0.10368521,0.29616012,0.61368167,0.0467804534,0.25326364,0.30143828,0.58720853,0.38583915,0.51819251,0.51776195,0.51579555,0.50638516,0.18010851,0.33925604,0.21002313,0.37811719,0.71859305,0.71907643,0.72557469,0.73003289,0.72557154,0.73569967,0.72238301,0.72067944,0.71869394,0.71723692,0.70636963,0.69482124,0.68127521,0.65881109,0.62771352],
    [0.4554452003,0.4063417112,0.2948217036,0.2833452468,0.3821844622,0.4064530496,1,0.3086807192,0.4452090904,0.2821744283,0.48223938,0.38846909,0.34895654,0.34895654,0.32378559,0.05209844,0.21776307,0.53948337,0.0518397979,0.14746564,0.19687591,0.35793414,0.25686501,0.4147985,0.41245564,0.40908334,0.39553951,0.23589622,0.31184794,0.26275262,0.33373748,0.40067346,0.39686631,0.40105448,0.41719002,0.40618409,0.41614075,0.40718584,0.40633364,0.40320926,0.40154652,0.39790359,0.38912836,0.38168452,0.36962237,0.35149086],
    [0.4117299778,0.4633432721,0.4105413757,0.4328196453,0.3877421347,0.3811421646,0.3086807192,1,0.3267123288,0.3809645749,0.38780319,0.51408593,0.25328448,0.25328448,0.21321089,0.01348008,0.29046924,0.39406565,0.0642057185,0.21731705,0.20701222,0.31179632,0.21366059,0.49966253,0.49931341,0.4963416,0.48593063,0.23339006,0.41872621,0.26742761,0.45103129,0.34701569,0.35423197,0.35739861,0.34822145,0.35861794,0.3582833,0.36126443,0.35807127,0.36016159,0.35914975,0.35521918,0.35421645,0.34956602,0.3411763,0.32879008],
    [0.3951178475,0.447351488,0.3073754329,0.3248028001,0.3419898869,0.3819255837,0.4452090904,0.3267123288,1,0.2966929132,0.41843827,0.40380549,0.37420948,0.37420948,0.29352376,0.03251236,0.22736785,0.42354322,0.0569693877,0.16708063,0.18530026,0.3106002,0.26156218,0.46815696,0.46309724,0.45782809,0.44125233,0.46184888,0.35849711,0.49211582,0.38030928,0.3367424,0.33938613,0.34322661,0.34902728,0.34198696,0.3491163,0.34121972,0.34031313,0.33628381,0.33650213,0.33232477,0.32393186,0.31851387,0.30790485,0.29403038],
    [0.3824807795,0.4315161807,0.3798691459,0.3176011978,0.360547496,0.3390335835,0.2821744283,0.3809645749,0.2966929132,1,0.3407577,0.46666233,0.21938567,0.21938567,0.17879309,0.00830057,0.24850611,0.35737509,0.0614766059,0.20097419,0.19333968,0.30873717,0.18642884,0.47118148,0.47484512,0.47723922,0.47240227,0.22599121,0.3731583,0.25938882,0.40784649,0.32335843,0.33113636,0.33008084,0.33076475,0.34147463,0.34140016,0.35014699,0.34484332,0.3491722,0.34737532,0.34616363,0.34444073,0.33887979,0.33101687,0.31784659],
    [0.60579588,0.56125881,0.49998089,0.3188409,0.5031806,0.65871758,0.48223938,0.38780319,0.41843827,0.3407577,1,0.47433061,0.54891035,0.54891035,0.54313667,0.11330573,0.28699855,0.71189457,0.0440977564,0.24230674,0.28798376,0.58467278,0.42209965,0.51668879,0.5142244,0.51194594,0.50139468,0.20000957,0.35609992,0.2263764,0.3870755,0.64406179,0.63530893,0.63840613,0.67178929,0.65056846,0.66664006,0.65159606,0.65017234,0.64496001,0.64714525,0.6418051,0.62701895,0.61638627,0.59894774,0.57089584],
    [0.51380114,0.55827634,0.49145645,0.38706748,0.47363493,0.46944694,0.38846909,0.51408593,0.40380549,0.46666233,0.47433061,1,0.3708342,0.3708342,0.27653426,0.01072604,0.34976066,0.49094979,0.0776016103,0.2459999,0.23581216,0.38965402,0.28350144,0.63765769,0.63806922,0.63462946,0.61892952,0.30247327,0.54282103,0.33816089,0.57691447,0.43500158,0.4447299,0.44528142,0.4438244,0.45518522,0.44852646,0.45469155,0.45235526,0.45549041,0.45103922,0.44666156,0.44183008,0.43478888,0.4212992,0.40093768],
    [0.42736125,0.4185337,0.33262339,0.22580691,0.35812954,0.50187478,0.34895654,0.25328448,0.37420948,0.21938567,0.54891035,0.3708342,1,1,0.66211026,0.13211117,0.23971942,0.61017736,0.0409874913,0.18222199,0.2223079,0.4631149,0.53292457,0.41172115,0.40160624,0.39458336,0.37611221,0.21621201,0.40710785,0.20756076,0.37979659,0.49263786,0.48448327,0.48611889,0.50282611,0.48184531,0.48765404,0.47228125,0.47013108,0.46326497,0.45923463,0.45513886,0.44307499,0.43448477,0.42174579,0.40180424],
    [0.42736125,0.4185337,0.33262339,0.22580691,0.35812954,0.50187478,0.34895654,0.25328448,0.37420948,0.21938567,0.54891035,0.3708342,1,1,0.66211026,0.13211117,0.23971942,0.61017736,0.0409874913,0.18222199,0.2223079,0.4631149,0.53292457,0.41172115,0.40160624,0.39458336,0.37611221,0.21621201,0.40710785,0.20756076,0.37979659,0.49263786,0.48448327,0.48611889,0.50282611,0.48184531,0.48765404,0.47228125,0.47013108,0.46326497,0.45923463,0.45513886,0.44307499,0.43448477,0.42174579,0.40180424],
    [0.41576287,0.35340368,0.32121251,0.20713022,0.33901571,0.53046017,0.32378559,0.21321089,0.29352376,0.17879309,0.54313667,0.27653426,0.66211026,0.66211026,1,0.0950783,0.21280487,0.55405577,0.0399730131,0.159355,0.19287257,0.41113549,0.71592336,0.3445308,0.33495418,0.32815137,0.30953762,0.19187962,0.3289306,0.18287264,0.30401364,0.54553868,0.52225999,0.51570331,0.5278713,0.49607076,0.49478442,0.47378446,0.46441292,0.45350847,0.45637762,0.43698989,0.41889817,0.40818701,0.3840125,0.36277028],
    [0.02702981,0.02376215,0.05314581,0.00494626,0.04308773,0.10368521,0.05209844,0.01348008,0.03251236,0.00830057,0.11330573,0.01072604,0.13211117,0.13211117,0.0950783,1,0.01223095,0.10414832,0.000630922278,0.036919,0.08366442,0.09971902,0.10388443,0.01301862,0.01243254,0.01206082,0.01019058,0.00591012,0.01100762,0.00641316,0.01242399,0.10522413,0.10886568,0.10609911,0.11002011,0.11114124,0.11385166,0.10999737,0.1112392,0.11039217,0.11153133,0.11034746,0.10780339,0.10522632,0.10188593,0.09600997],
    [0.33016556,0.35499844,0.30908122,0.26402145,0.31817082,0.29616012,0.21776307,0.29046924,0.22736785,0.24850611,0.28699855,0.34976066,0.23971942,0.23971942,0.21280487,0.01223095,1,0.28224024,0.0813881471,0.18317431,0.1762773,0.24735519,0.14076607,0.3685781,0.36708846,0.36428155,0.35348557,0.12943239,0.27705255,0.14769212,0.29178259,0.28087255,0.27946811,0.27952446,0.28931039,0.28672583,0.29499743,0.28415415,0.28700827,0.28626581,0.28439591,0.28109209,0.27559373,0.26970269,0.25962318,0.24418598],
    [0.58635889,0.55217115,0.44545498,0.33645817,0.50078874,0.61368167,0.53948337,0.39406565,0.42354322,0.35737509,0.71189457,0.49094979,0.61017736,0.61017736,0.55405577,0.10414832,0.28224024,1,0.0522764378,0.2216243,0.27441848,0.57431461,0.48435262,0.52357466,0.52521603,0.52306473,0.51362571,0.21117093,0.37609375,0.23798446,0.40401826,0.61194248,0.60569952,0.61397335,0.63465067,0.6240976,0.63561915,0.62517432,0.62371414,0.62641397,0.62024016,0.61871447,0.6099966,0.59898178,0.58680964,0.56314935],
    [0.0526,0.0682756442,0.050925508,0.0665632933,0.0576146837,0.0467804534,0.0518397979,0.0642057185,0.0569693877,0.0614766059,0.0440977564,0.0776016103,0.0409874913,0.0409874913,0.0399730131,0.000630922278,0.0813881471,0.0522764378,1,0.04052365,0.03535914,0.0397803,0.0286219,0.08119593,0.08125586,0.08034782,0.07768891,0.05127297,0.0790471,0.05124415,0.07444053,0.04632658,0.04645533,0.04628592,0.04531741,0.04606546,0.04630026,0.04396432,0.04523384,0.04400237,0.04334062,0.04246964,0.04159116,0.04017151,0.03837894,0.03587935],
    [0.24196185,0.26293102,0.23613228,0.18532491,0.24217268,0.25326364,0.14746564,0.21731705,0.16708063,0.20097419,0.24230674,0.2459999,0.18222199,0.18222199,0.159355,0.036919,0.18317431,0.2216243,0.04052365,1,0.83031695,0.22288715,0.12090781,0.27930794,0.28304714,0.2831222,0.2839683,0.11395627,0.1980812,0.13523362,0.22313361,0.24355092,0.2444102,0.24917988,0.25087322,0.25479917,0.26228905,0.25862939,0.25812121,0.25838923,0.25462109,0.26546056,0.25221581,0.25033054,0.24534611,0.23610781],
    [0.27221272,0.27759201,0.25167551,0.17289611,0.28431336,0.30143828,0.19687591,0.20701222,0.18530026,0.19333968,0.28798376,0.23581216,0.2223079,0.2223079,0.19287257,0.08366442,0.1762773,0.27441848,0.03535914,0.83031695,1,0.26741413,0.15123497,0.26551029,0.26922452,0.26935126,0.27017982,0.10647506,0.18696965,0.12654501,0.21149907,0.29277511,0.29346173,0.29789082,0.30348467,0.31087822,0.31988352,0.31552877,0.31629529,0.31749487,0.31388192,0.32694886,0.31628655,0.31185219,0.30671192,0.29688954],
    [0.5297843,0.48666612,0.4320463,0.24979868,0.48712907,0.58720853,0.35793414,0.31179632,0.3106002,0.30873717,0.58467278,0.38965402,0.4631149,0.4631149,0.41113549,0.09971902,0.24735519,0.57431461,0.0397803,0.22288715,0.26741413,1,0.32489362,0.44895364,0.45298998,0.45437031,0.4552238,0.14576449,0.28606831,0.17166745,0.32252827,0.56524902,0.5703297,0.57423593,0.59988224,0.5951026,0.61418408,0.60444146,0.61809357,0.60993771,0.61588362,0.61849856,0.61398761,0.61203798,0.60309214,0.58789034],
    [0.30993828,0.26455836,0.31182428,0.15467014,0.25308305,0.38583915,0.25686501,0.21366059,0.26156218,0.18642884,0.42209965,0.28350144,0.53292457,0.53292457,0.71592336,0.10388443,0.14076607,0.48435262,0.0286219,0.12090781,0.15123497,0.32489362,1,0.25982209,0.25316168,0.24873411,0.23684966,0.24070664,0.33707003,0.22952372,0.3122792,0.43345085,0.42549357,0.42054185,0.40911409,0.40392718,0.38683138,0.38625928,0.37645144,0.37215042,0.36597865,0.35890354,0.35504613,0.34971191,0.34360757,0.33943963],
    [0.56392254,0.65647515,0.47436775,0.46431216,0.53726839,0.51819251,0.4147985,0.49966253,0.46815696,0.47118148,0.51668879,0.63765769,0.41172115,0.41172115,0.3445308,0.01301862,0.3685781,0.52357466,0.08119593,0.27930794,0.26551029,0.44895364,0.25982209,1,0.92608732,0.90972118,0.87475523,0.33674652,0.67493057,0.38441515,0.73201313,0.49376238,0.50187619,0.50623808,0.51433938,0.52012937,0.52823657,0.52318581,0.52817519,0.52239126,0.52663966,0.5238975,0.51611705,0.509028,0.49388507,0.47080566],
    [0.56500913,0.65904448,0.47660416,0.46292593,0.54285534,0.51776195,0.41245564,0.49931341,0.46309724,0.47484512,0.5142244,0.63806922,0.40160624,0.40160624,0.33495418,0.01243254,0.36708846,0.52521603,0.08125586,0.28304714,0.26922452,0.45298998,0.25316168,0.92608732,1,0.92805163,0.89039582,0.33016366,0.66267543,0.37895045,0.72273398,0.49479465,0.50357783,0.50883872,0.51601246,0.52530339,0.53292827,0.53161837,0.53525644,0.53238626,0.53571469,0.53456078,0.5268366,0.52081344,0.50695437,0.48429888],
    [0.56251952,0.6578434,0.47535197,0.46021896,0.54335858,0.51579555,0.40908334,0.4963416,0.45782809,0.47723922,0.51194594,0.63462946,0.39458336,0.39458336,0.32815137,0.01206082,0.36428155,0.52306473,0.08034782,0.2831222,0.26935126,0.45437031,0.24873411,0.90972118,0.92805163,1,0.90138916,0.3253131,0.65371046,0.37266196,0.71229287,0.49480879,0.50238714,0.50773753,0.51723005,0.52639795,0.53544877,0.53390702,0.53865815,0.53729947,0.54123439,0.5404512,0.53404063,0.52788698,0.51498204,0.49348238],
    [0.55151945,0.64949691,0.46944441,0.44288894,0.53720521,0.50638516,0.39553951,0.48593063,0.44125233,0.47240227,0.50139468,0.61892952,0.37611221,0.37611221,0.30953762,0.01019058,0.35348557,0.51362571,0.07768891,0.2839683,0.27017982,0.4552238,0.23684966,0.87475523,0.89039582,0.90138916,1,0.30991728,0.6248757,0.35766976,0.68789752,0.48840378,0.4978159,0.50329058,0.5117833,0.52291951,0.5337674,0.53530355,0.54032689,0.54127864,0.54657676,0.54861962,0.54523916,0.54279141,0.53373649,0.51629236],
    [0.2039703,0.2587574,0.2079206,0.22757903,0.17759591,0.18010851,0.23589622,0.23339006,0.46184888,0.22599121,0.20000957,0.30247327,0.21621201,0.21621201,0.19187962,0.00591012,0.12943239,0.21117093,0.05127297,0.11395627,0.10647506,0.14576449,0.24070664,0.33674652,0.33016366,0.3253131,0.30991728,1,0.54211775,0.8615773,0.4406943,0.17532561,0.17570774,0.17516223,0.17484036,0.17727345,0.17471557,0.17478352,0.1744945,0.1722582,0.17229644,0.17064494,0.16882688,0.16699023,0.16372066,0.15983084],
    [0.39040251,0.46418343,0.38414317,0.34814559,0.35904132,0.33925604,0.31184794,0.41872621,0.35849711,0.3731583,0.35609992,0.54282103,0.40710785,0.40710785,0.3289306,0.01100762,0.27705255,0.37609375,0.0790471,0.1980812,0.18696965,0.28606831,0.33707003,0.67493057,0.66267543,0.65371046,0.6248757,0.54211775,1,0.46401193,0.84653816,0.3347811,0.33393577,0.33403374,0.33411017,0.34288874,0.33735991,0.33885486,0.33858666,0.33633284,0.33604065,0.33535642,0.33212793,0.32905309,0.32196372,0.31112219],
    [0.23371053,0.30317818,0.23749214,0.26000489,0.20950627,0.21002313,0.26275262,0.26742761,0.49211582,0.25938882,0.2263764,0.33816089,0.20756076,0.20756076,0.18287264,0.00641316,0.14769212,0.23798446,0.05124415,0.13523362,0.12654501,0.17166745,0.22952372,0.38441515,0.37895045,0.37266196,0.35766976,0.8615773,0.46401193,1,0.56063702,0.20224299,0.20538976,0.20397388,0.2034989,0.20801616,0.20676687,0.20769759,0.20661434,0.20473471,0.20514029,0.20267837,0.20098108,0.19834976,0.19306365,0.18614602],
    [0.42695416,0.52121081,0.41635873,0.37603979,0.40254807,0.37811719,0.33373748,0.45103129,0.38030928,0.40784649,0.3870755,0.57691447,0.37979659,0.37979659,0.30401364,0.01242399,0.29178259,0.40401826,0.07444053,0.22313361,0.21149907,0.32252827,0.3122792,0.73201313,0.72273398,0.71229287,0.68789752,0.4406943,0.84653816,0.56063702,1,0.37023046,0.37450151,0.37405766,0.37373099,0.3863616,0.38356893,0.38683771,0.38594121,0.38449528,0.3854494,0.3841202,0.38159264,0.37835651,0.36972317,0.35578441],
    [0.57248911,0.51625921,0.5013655,0.28059474,0.54134766,0.71859305,0.40067346,0.34701569,0.3367424,0.32335843,0.64406179,0.43500158,0.49263786,0.49263786,0.54553868,0.10522413,0.28087255,0.61194248,0.04632658,0.24355092,0.29277511,0.56524902,0.43345085,0.49376238,0.49479465,0.49480879,0.48840378,0.17532561,0.3347811,0.20224299,0.37023046,1,0.76333781,0.72680051,0.78679797,0.79332202,0.74945926,0.80258266,0.74052186,0.74669127,0.73764142,0.72197267,0.71550683,0.70120233,0.6740349,0.63999171],
    [0.57870168,0.52483035,0.51578964,0.27919584,0.55084409,0.71907643,0.39686631,0.35423197,0.33938613,0.33113636,0.63530893,0.4447299,0.48448327,0.48448327,0.52225999,0.10886568,0.27946811,0.60569952,0.04645533,0.2444102,0.29346173,0.5703297,0.42549357,0.50187619,0.50357783,0.50238714,0.4978159,0.17570774,0.33393577,0.20538976,0.37450151,0.76333781,1,0.8222419,0.7372708,0.77617517,0.77050515,0.76529763,0.79484524,0.74103997,0.75827219,0.73200724,0.73130181,0.71031233,0.69008222,0.65611013],
    [0.58737514,0.5317643,0.51068129,0.28104882,0.56260434,0.72557469,0.40105448,0.35739861,0.34322661,0.33008084,0.63840613,0.44528142,0.48611889,0.48611889,0.51570331,0.10609911,0.27952446,0.61397335,0.04628592,0.24917988,0.29789082,0.57423593,0.42054185,0.50623808,0.50883872,0.50773753,0.50329058,0.17516223,0.33403374,0.20397388,0.37405766,0.72680051,0.8222419,1,0.74412671,0.78012265,0.79908318,0.79931747,0.75393013,0.78712872,0.77526527,0.75328981,0.72860399,0.71835142,0.73792295,0.692666],
    [0.596023,0.5463195,0.50547108,0.28902312,0.56021229,0.73003289,0.41719002,0.34822145,0.34902728,0.33076475,0.67178929,0.4438244,0.50282611,0.50282611,0.5278713,0.11002011,0.28931039,0.63465067,0.04531741,0.25087322,0.30348467,0.59988224,0.40911409,0.51433938,0.51601246,0.51723005,0.5117833,0.17484036,0.33411017,0.2034989,0.37373099,0.78679797,0.7372708,0.74412671,1,0.74682598,0.79833582,0.80553078,0.78516481,0.76752744,0.78284018,0.76567568,0.74822977,0.73946387,0.71648695,0.68310496],
    [0.5966412,0.54965299,0.50619231,0.28744521,0.57501769,0.72557154,0.40618409,0.35861794,0.34198696,0.34147463,0.65056846,0.45518522,0.48184531,0.48184531,0.49607076,0.11114124,0.28672583,0.6240976,0.04606546,0.25479917,0.31087822,0.5951026,0.40392718,0.52012937,0.52530339,0.52639795,0.52291951,0.17727345,0.34288874,0.20801616,0.3863616,0.79332202,0.77617517,0.78012265,0.74682598,1,0.78008907,0.79558517,0.796312,0.79632424,0.79737499,0.77683032,0.77266309,0.81879557,0.72956592,0.70688741],
    [0.61043517,0.56316696,0.51170914,0.29143391,0.58551357,0.73569967,0.41614075,0.3582833,0.3491163,0.34140016,0.66664006,0.44852646,0.48765404,0.48765404,0.49478442,0.11385166,0.29499743,0.63561915,0.04630026,0.26228905,0.31988352,0.61418408,0.38683138,0.52823657,0.53292827,0.53544877,0.5337674,0.17471557,0.33735991,0.20676687,0.38356893,0.74945926,0.77050515,0.79908318,0.79833582,0.78008907,1,0.76966087,0.81230776,0.81344978,0.80648658,0.80038737,0.77526091,0.77597734,0.75838833,0.7299054],
    [0.60103168,0.55755603,0.51484925,0.28810042,0.58246698,0.72238301,0.40718584,0.36126443,0.34121972,0.35014699,0.65159606,0.45469155,0.47228125,0.47228125,0.47378446,0.10999737,0.28415415,0.62517432,0.04396432,0.25862939,0.31552877,0.60444146,0.38625928,0.52318581,0.53161837,0.53390702,0.53530355,0.17478352,0.33885486,0.20769759,0.38683771,0.80258266,0.76529763,0.79931747,0.80553078,0.79558517,0.76966087,1,0.77494228,0.81363625,0.82392997,0.80984697,0.78288793,0.80321633,0.82547701,0.74127371],
    [0.60290093,0.56400017,0.50992878,0.28877377,0.58504817,0.72067944,0.40633364,0.35807127,0.34031313,0.34484332,0.65017234,0.45235526,0.47013108,0.47013108,0.46441292,0.1112392,0.28700827,0.62371414,0.04523384,0.25812121,0.31629529,0.61809357,0.37645144,0.52817519,0.53525644,0.53865815,0.54032689,0.1744945,0.33858666,0.20661434,0.38594121,0.74052186,0.79484524,0.75393013,0.78516481,0.796312,0.81230776,0.77494228,1,0.79694214,0.81996509,0.81194162,0.81072014,0.78764238,0.785034,0.75404616],
    [0.60410588,0.55901097,0.5119692,0.28537599,0.59010354,0.71869394,0.40320926,0.36016159,0.33628381,0.3491722,0.64496001,0.45549041,0.46326497,0.46326497,0.45350847,0.11039217,0.28626581,0.62641397,0.04400237,0.25838923,0.31749487,0.60993771,0.37215042,0.52239126,0.53238626,0.53729947,0.54127864,0.1722582,0.33633284,0.20473471,0.38449528,0.74669127,0.74103997,0.78712872,0.76752744,0.79632424,0.81344978,0.81363625,0.79694214,1,0.82302485,0.82257211,0.81439789,0.80417052,0.79711227,0.76931],
    [0.60540708,0.56718288,0.5067954,0.28753044,0.58634039,0.71723692,0.40154652,0.35914975,0.33650213,0.34737532,0.64714525,0.45103922,0.45923463,0.45923463,0.45637762,0.11153133,0.28439591,0.62024016,0.04334062,0.25462109,0.31388192,0.61588362,0.36597865,0.52663966,0.53571469,0.54123439,0.54657676,0.17229644,0.33604065,0.20514029,0.3854494,0.73764142,0.75827219,0.77526527,0.78284018,0.79737499,0.80648658,0.82392997,0.81996509,0.82302485,1,0.82691405,0.82750592,0.83764978,0.80862298,0.83328745],
    [0.6009499,0.56765028,0.50265692,0.28366748,0.58245394,0.70636963,0.39790359,0.35521918,0.33232477,0.34616363,0.6418051,0.44666156,0.45513886,0.45513886,0.43698989,0.11034746,0.28109209,0.61871447,0.04246964,0.26546056,0.32694886,0.61849856,0.35890354,0.5238975,0.53456078,0.5404512,0.54861962,0.17064494,0.33535642,0.20267837,0.3841202,0.72197267,0.73200724,0.75328981,0.76567568,0.77683032,0.80038737,0.80984697,0.81194162,0.82257211,0.82691405,1,0.83754423,0.83388989,0.82047998,0.80058445],
    [0.59320841,0.56006637,0.4982234,0.27863861,0.57743473,0.69482124,0.38912836,0.35421645,0.32393186,0.34444073,0.62701895,0.44183008,0.44307499,0.44307499,0.41889817,0.10780339,0.27559373,0.6099966,0.04159116,0.25221581,0.31628655,0.61398761,0.35504613,0.51611705,0.5268366,0.53404063,0.54523916,0.16882688,0.33212793,0.20098108,0.38159264,0.71550683,0.73130181,0.72860399,0.74822977,0.77266309,0.77526091,0.78288793,0.81072014,0.81439789,0.82750592,0.83754423,1,0.84197586,0.83497919,0.8175827],
    [0.58412786,0.55502153,0.48900455,0.27314253,0.56872574,0.68127521,0.38168452,0.34956602,0.31851387,0.33887979,0.61638627,0.43478888,0.43448477,0.43448477,0.40818701,0.10522632,0.26970269,0.59898178,0.04017151,0.25033054,0.31185219,0.61203798,0.34971191,0.509028,0.52081344,0.52788698,0.54279141,0.16699023,0.32905309,0.19834976,0.37835651,0.70120233,0.71031233,0.71835142,0.73946387,0.81879557,0.77597734,0.80321633,0.78764238,0.80417052,0.83764978,0.83388989,0.84197586,1,0.84748124,0.83566176],
    [0.56955049,0.54437116,0.47656707,0.2650266,0.55364223,0.65881109,0.36962237,0.3411763,0.30790485,0.33101687,0.59894774,0.4212992,0.42174579,0.42174579,0.3840125,0.10188593,0.25962318,0.58680964,0.03837894,0.24534611,0.30671192,0.60309214,0.34360757,0.49388507,0.50695437,0.51498204,0.53373649,0.16372066,0.32196372,0.19306365,0.36972317,0.6740349,0.69008222,0.73792295,0.71648695,0.72956592,0.75838833,0.82547701,0.785034,0.79711227,0.80862298,0.82047998,0.83497919,0.84748124,1,0.8529072],
    [0.54439147,0.52329833,0.45562843,0.25476288,0.52898764,0.62771352,0.35149086,0.32879008,0.29403038,0.31784659,0.57089584,0.40093768,0.40180424,0.40180424,0.36277028,0.09600997,0.24418598,0.56314935,0.03587935,0.23610781,0.29688954,0.58789034,0.33943963,0.47080566,0.48429888,0.49348238,0.51629236,0.15983084,0.31112219,0.18614602,0.35578441,0.63999171,0.65611013,0.692666,0.68310496,0.70688741,0.7299054,0.74127371,0.75404616,0.76931,0.83328745,0.80058445,0.8175827,0.83566176,0.8529072,1]])



    #Run through all combinations of atlases and calculate adjusted mutual information
    
    #AMI_array = np.zeros((len(atlas_paths)+1,len(atlas_paths)+1))

    #a=0 #I'm sure there is a better way of doing this
    #b=0

    #for i in atlas_paths:
    #    for j in atlas_paths:
    #        if a >= b:
    #            AMI = adjusted_mutual_info(i,j)
    #            AMI_array[int(a)][int(b)]=float(AMI)
    #        b=b+1
    #    b=0
    #    a=a+1

    #Generate labels for figure
    for i in range(len(atlases)):
        atlases[i] = atlases[i].split('_space-MNI')[0]
        atlases[i] = atlases[i].split('reg_')[1]

    fig, ax = plt.subplots()
    im = ax.imshow(AMI_array, cmap="gist_heat_r")
    ax.set_xticks(np.arange(len(atlases)))
    ax.set_yticks(np.arange(len(atlases)))

    ax.set_xticklabels(atlases)
    ax.set_yticklabels(atlases)

    plt.setp(ax.get_xticklabels(), fontsize=6, rotation=90, ha="right", va="center", rotation_mode="anchor")
    plt.setp(ax.get_yticklabels(), fontsize=6)

    #for i in range(len(atlases)):
    #    for j in range(len(atlases)):
    #        text = ax.text(j,i,AMI_array[i,j], fontsize = 4, ha="center", va="center", color="w")
    
    plt.colorbar(im, aspect=30)
    #ax.set_title("something")
    fig.tight_layout()

    plt.show()

    plt.savefig(f'{output_dir}/adjusted_mutual.png', dpi=1000)



if __name__ == "__main__":
    main()